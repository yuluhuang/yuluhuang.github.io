<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>只做一件事, 做好一件事, 做正确的事</title>
  
  <subtitle>Continuous development，not episodic</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yuluhuang.github.io/"/>
  <updated>2019-04-06T03:43:44.000Z</updated>
  <id>http://yuluhuang.github.io/</id>
  
  <author>
    <name>luhuang yu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mac 编译 nginx stream</title>
    <link href="http://yuluhuang.github.io/2019/04/06/mac-%E7%BC%96%E8%AF%91-nginx-stream/"/>
    <id>http://yuluhuang.github.io/2019/04/06/mac-编译-nginx-stream/</id>
    <published>2019-04-06T03:25:21.000Z</published>
    <updated>2019-04-06T03:43:44.000Z</updated>
    
    <content type="html"><![CDATA[<p>上周搭建的gitlab对于ssh clone存在问题，主要是nginx对于stream默认是不支持的，需要自己重新编译。</p><p>对于ubuntu,按照网上教程，还是比较简单的，但是在mac下编译问题会稍微复杂一点，但是网上解决方法也很详尽，<br>细心一点，多试几次问题也不大。</p><p>一般mac的openssl都是比较老的，且存在漏洞，所有要下最新的指定编译就好了<br><code>./configure --prefix=/usr/local/nginx --with-stream --with-stream_ssl_module --with-http_stub_status_module  --with-openssl=/usr/local/nginx/openssl-1.0.2r</code></p><p>另一个错误类似 ld: symbol(s) not found for architecture x86_64</p><p>要在 ./configure 之后<br>然后在objs里，打开Makefile，找到<br><code>./config --prefix=xxx.openssl no-shared</code></p><p>把该段的 ./config 改成 ./Configure darwin64-x86_64-cc 其他后面参数不变，保存</p><p>使用方法如下<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">stream &#123;</span><br><span class="line">    upstream ssh &#123;</span><br><span class="line">       <span class="built_in"> server </span>192.168.1.12:22;</span><br><span class="line">    &#125;</span><br><span class="line">   <span class="built_in"> server </span>&#123;</span><br><span class="line">        listen        12345;</span><br><span class="line">        proxy_pass    ssh;</span><br><span class="line"></span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;上周搭建的gitlab对于ssh clone存在问题，主要是nginx对于stream默认是不支持的，需要自己重新编译。&lt;/p&gt;
&lt;p&gt;对于ubuntu,按照网上教程，还是比较简单的，但是在mac下编译问题会稍微复杂一点，但是网上解决方法也很详尽，&lt;br&gt;细心一点，多试几次
      
    
    </summary>
    
    
      <category term="nginx" scheme="http://yuluhuang.github.io/tags/nginx/"/>
    
      <category term="mac" scheme="http://yuluhuang.github.io/tags/mac/"/>
    
      <category term="stream" scheme="http://yuluhuang.github.io/tags/stream/"/>
    
  </entry>
  
  <entry>
    <title>Creating a Mongo replicaset using docker_ Mongo replicaset + Nodejs + Docker Compose</title>
    <link href="http://yuluhuang.github.io/2019/03/09/Creating-a-Mongo-replicaset-using-docker-Mongo-replicaset-Nodejs-Docker-Compose/"/>
    <id>http://yuluhuang.github.io/2019/03/09/Creating-a-Mongo-replicaset-using-docker-Mongo-replicaset-Nodejs-Docker-Compose/</id>
    <published>2019-03-09T12:14:58.000Z</published>
    <updated>2019-03-09T12:33:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>参考 <a href="https://www.youtube.com/watch?v=mlw7vWISaF4" target="_blank" rel="noopener">https://www.youtube.com/watch?v=mlw7vWISaF4</a></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">version: <span class="string">'3'</span></span><br><span class="line">services:</span><br><span class="line">  mongo-rs0-<span class="number">1</span>:</span><br><span class="line">    image: <span class="string">"mongo-start"</span></span><br><span class="line">    build: ./mongo-rs0-<span class="number">1</span></span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">'27017:27017'</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./mongo-rs0-<span class="number">1</span>/data:/data/db</span><br><span class="line">      - ./mongo-rs0-<span class="number">1</span>/keyfile:/usr/src/configs/keyfile</span><br><span class="line">      - ./mongo-rs0-<span class="number">1</span>/log:/usr/src/configs/logs</span><br><span class="line">      - ./mongo-rs0-<span class="number">1</span>/backup:/usr/src/configs/backup</span><br><span class="line">    depends_on:</span><br><span class="line">      - <span class="string">'mongo-rs0-2'</span></span><br><span class="line">      - <span class="string">'mongo-rs0-3'</span></span><br><span class="line"></span><br><span class="line">  mongo-rs0-<span class="number">2</span>:</span><br><span class="line">    image: <span class="string">'mongo'</span></span><br><span class="line">    build: ./mongo-rs0-<span class="number">2</span></span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">'27018:27017'</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./mongo-rs0-<span class="number">2</span>/data:/data/db</span><br><span class="line">      - ./mongo-rs0-<span class="number">2</span>/keyfile:/usr/src/configs/keyfile</span><br><span class="line">      - ./mongo-rs0-<span class="number">2</span>/log:/usr/src/configs/logs</span><br><span class="line"></span><br><span class="line">  mongo-rs0-<span class="number">3</span>:</span><br><span class="line">    image: <span class="string">'mongo'</span></span><br><span class="line">    build: ./mongo-rs0-<span class="number">3</span></span><br><span class="line">    ports:</span><br><span class="line">      - <span class="string">'27019:27017'</span></span><br><span class="line">    volumes:</span><br><span class="line">      - ./mongo-rs0-<span class="number">3</span>/data:/data/db</span><br><span class="line">      - ./mongo-rs0-<span class="number">3</span>/keyfile:/usr/src/configs/keyfile</span><br><span class="line">      - ./mongo-rs0-<span class="number">3</span>/log:/usr/src/configs/logs</span><br><span class="line"></span><br><span class="line">  setup-rs:</span><br><span class="line">    image: <span class="string">"setup-rs"</span></span><br><span class="line">    build: ./setup</span><br><span class="line">    volumes:</span><br><span class="line">      - ./setup/replicaSet.js:/usr/src/configs/replicaSet.js</span><br><span class="line">      - ./setup/setup.sh:/usr/src/configs/setup.sh</span><br><span class="line">    depends_on:</span><br><span class="line">      - <span class="string">'mongo-rs0-1'</span></span><br></pre></td></tr></table></figure><h3 id="有几个问题"><a href="#有几个问题" class="headerlink" title="有几个问题"></a>有几个问题</h3><p>容器setup-rs执行总是失败，导致副本集无法创建，只能进入容器mongo-rs0-1，执行replicaSet.js里<br>的内容创建副本集<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">rsconf = &#123;</span><br><span class="line">_id: <span class="string">"rs0"</span>,</span><br><span class="line">members: [</span><br><span class="line">&#123;_id: <span class="number">0</span>, host: <span class="string">"mongo-rs0-1:27017"</span>&#125;,</span><br><span class="line">&#123;_id: <span class="number">1</span>, host: <span class="string">"mongo-rs0-2:27017"</span>&#125;,</span><br><span class="line">&#123;_id: <span class="number">2</span>, host: <span class="string">"mongo-rs0-3:27017"</span>&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">rs.initiate(rsconf);</span><br><span class="line">rs.conf();</span><br></pre></td></tr></table></figure></p><p>之后创建用户。<br>因为在本地你可以不使用keyfile。如果使用要注意权限问题</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;参考 &lt;a href=&quot;https://www.youtube.com/watch?v=mlw7vWISaF4&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.youtube.com/watch?v=mlw7vWISaF4&lt;/a&gt;&lt;/
      
    
    </summary>
    
      <category term="技术" scheme="http://yuluhuang.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="docker" scheme="http://yuluhuang.github.io/tags/docker/"/>
    
      <category term="mongo" scheme="http://yuluhuang.github.io/tags/mongo/"/>
    
      <category term="docker-compose" scheme="http://yuluhuang.github.io/tags/docker-compose/"/>
    
      <category term="副本集" scheme="http://yuluhuang.github.io/tags/%E5%89%AF%E6%9C%AC%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>Visit  Web With Frp and Nginx</title>
    <link href="http://yuluhuang.github.io/2019/03/02/Visit-Web-With-Frp-and-Nginx/"/>
    <id>http://yuluhuang.github.io/2019/03/02/Visit-Web-With-Frp-and-Nginx/</id>
    <published>2019-03-02T13:06:32.000Z</published>
    <updated>2019-03-09T12:13:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p><a href="www.yuluhuang.com">个人网站</a> 无序野蛮发展导致功能混乱代码臃肿, 原先2台低配阿里云服务器勉强撑起整个站点，费用也要 &gt;1k/台/年还是有限的带宽, 网站并没有什么流量，几乎没有访问量。 这真是太可怕了。<br>目前系统设计如下:<br><img src="/img/456EFEA0-44DA-4F2C-9F92-03172071BD70.png" alt="573054f24a30a60fd0e1ac9d5ed7bd2e.png"><br>新设计将所有应用部署本地运行, 在server部署一个缓存应用来减少与local的通信<br><img src="/img/7091F1FB-74BB-48CA-8C9A-D1919E9EA49D.png" alt="ec66de26afc54545b70b49d88b26732f.png"></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>通过frp内网穿透技术将请求转发到本地，如此只要一台服务器用于架设frp即可。</p><h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><ol><li>节约成本</li><li>将闲余的mac电脑利用起来，性能贼好</li><li>通过docker部署</li><li>将数据保存本地，阿里云什么都要钱</li></ol><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>原<br><img src="/img/F585D283-C712-42B8-A072-61CF69BCEFBE.png" alt="88a46390f23f75635084ae2f519efddc.png"><br>增加nginx<br><img src="/img/E193FC59-E389-4F9E-942F-585D4FB766F7.png" alt="7eff94988a99a007933afcf1ba88674b.png"></p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ol><li>中间增加frp层可能会造成传输堵塞</li><li>本地环境（网络，电）的稳定性</li></ol><h2 id="待续"><a href="#待续" class="headerlink" title="待续"></a>待续</h2><p>原计划通过在本地添加3个从库之后直接切换，因为用了docker无法直接加入副本集，<br>所有准备用docker直接创建新副本集，整个数据迁移</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;原因&quot;&gt;&lt;a href=&quot;#原因&quot; class=&quot;headerlink&quot; title=&quot;原因&quot;&gt;&lt;/a&gt;原因&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;www.yuluhuang.com&quot;&gt;个人网站&lt;/a&gt; 无序野蛮发展导致功能混乱代码臃肿, 原先2台低配阿里云服务器勉强撑
      
    
    </summary>
    
      <category term="https://yuluhuang.com" scheme="http://yuluhuang.github.io/categories/https-yuluhuang-com/"/>
    
    
      <category term="nginx" scheme="http://yuluhuang.github.io/tags/nginx/"/>
    
      <category term="frp" scheme="http://yuluhuang.github.io/tags/frp/"/>
    
  </entry>
  
  <entry>
    <title>Deploying ReactJS With Docker</title>
    <link href="http://yuluhuang.github.io/2019/02/28/Deploying-ReactJS-With-Docker/"/>
    <id>http://yuluhuang.github.io/2019/02/28/Deploying-ReactJS-With-Docker/</id>
    <published>2019-02-28T03:51:46.000Z</published>
    <updated>2019-03-09T12:17:41.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="自行选择测试项目，或新建项目"><a href="#自行选择测试项目，或新建项目" class="headerlink" title="自行选择测试项目，或新建项目"></a>自行选择测试项目，或新建项目</h3><ul><li><p>创建</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">npx </span><span class="built_in">create-react-app</span> <span class="string">reactdocker;</span></span><br><span class="line"><span class="string">cd </span><span class="string">reactdocker;</span></span><br></pre></td></tr></table></figure></li><li><p>运行</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">start</span>;</span><br></pre></td></tr></table></figure></li><li><p>关闭</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctrl + <span class="keyword">c</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="创建环境"><a href="#创建环境" class="headerlink" title="创建环境"></a>创建环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 在当前项目下执行</span><br><span class="line">docker run -it -p 3001:3000 -p 80:80 -v $PWD:/var/www/localhost/htdocs --name reactdocker alpine /bin/sh</span><br><span class="line"></span><br><span class="line">-p 3001:3000 # 虚拟机3000端口 映射 宿主机3001端口</span><br><span class="line">-v $PWD 宿主机当前目录 映射到 /var/www/localhost/htdocs，也就是在虚拟机中自动创建/var/www/localhost/htdocs并映射</span><br><span class="line">-—name reactdocker  reactdocker为别名</span><br><span class="line">alpine 虚拟机镜像</span><br></pre></td></tr></table></figure><h3 id="安装nodejs和npm"><a href="#安装nodejs和npm" class="headerlink" title="安装nodejs和npm"></a>安装nodejs和npm</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apk add nodejs;</span><br><span class="line">apk add npm;</span><br></pre></td></tr></table></figure><h3 id="重新安装包"><a href="#重新安装包" class="headerlink" title="重新安装包"></a>重新安装包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /var/www/localhost/htdocs;</span><br><span class="line"># 原文中删除包再重新安装，可能是规避nodejs版本或者包存在差异</span><br><span class="line"># 笔者建议可以先尝试 步骤5</span><br><span class="line">rm -rf node_modules;</span><br><span class="line">npm install;</span><br></pre></td></tr></table></figure><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm start;</span><br><span class="line"># 访问 http://localhost:3001/</span><br><span class="line"># press ctrl + c 关闭</span><br><span class="line">npm run build; # 构建</span><br><span class="line">cd build;</span><br><span class="line">ls -al;</span><br></pre></td></tr></table></figure><h3 id="安装-nginx，nano"><a href="#安装-nginx，nano" class="headerlink" title="安装 nginx，nano"></a>安装 nginx，nano</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apk add nginx; # 代理服务器</span><br><span class="line">apk add nano; # 字符终端的文本编辑器</span><br><span class="line"></span><br><span class="line">nano /etc/nginx/conf.d/default.conf # 编辑代理服务器配置</span><br></pre></td></tr></table></figure><ul><li>default.conf<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># This is a default site configuration which will simply return 404, preventing</span><br><span class="line"># chance access to any other virtualhost.</span><br><span class="line">server &#123;</span><br><span class="line">        listen 80 default_server;</span><br><span class="line">        listen [::]:80 default_server;4</span><br><span class="line">        location / &#123;</span><br><span class="line">                root   /var/www/localhost/htdocs/build;</span><br><span class="line">              # this will make so all routes will lead to      </span><br><span class="line">              # index.html so that react handles the routes              </span><br><span class="line">              try_files $uri $uri/ /index.html;</span><br><span class="line">        &#125;</span><br><span class="line"># You may need this to prevent return 404 recursion.</span><br><span class="line">        location = /404.html &#123;</span><br><span class="line">                internal;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="创建目录以允许nginx在进程ID上运行"><a href="#创建目录以允许nginx在进程ID上运行" class="headerlink" title="创建目录以允许nginx在进程ID上运行"></a>创建目录以允许nginx在进程ID上运行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir /run/nginx;</span><br><span class="line">nginx -t; # 测试配置</span><br><span class="line">nginx;</span><br><span class="line"># 访问 http://localhost/</span><br></pre></td></tr></table></figure><h3 id="创建-Dockerfile"><a href="#创建-Dockerfile" class="headerlink" title="创建 Dockerfile"></a>创建 Dockerfile</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">退出容器  </span><br><span class="line">ctrl + p</span><br><span class="line">ctrl + q</span><br><span class="line"># 创建config 文件夹</span><br><span class="line">mkdir config;</span><br><span class="line"># 拷贝 default.conf 到 config/default.conf</span><br><span class="line">docker cp reactdocker:/etc/nginx/conf.d/default.conf config/default.conf;</span><br><span class="line"># 销毁容器</span><br><span class="line">docker rm -f reactdocker;</span><br><span class="line"> docker ps -a # 查看所有容器</span><br></pre></td></tr></table></figure><ul><li>在项目根目录下创建基础 Dockerfile<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> alpine</span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> config/default.conf /etc/nginx/conf.d/default.conf</span></span><br><span class="line"><span class="bash">COPY . /var/www/localhost/htdocs</span></span><br><span class="line"><span class="bash">RUN apk add nginx &amp;&amp; \</span></span><br><span class="line"><span class="bash">    mkdir /run/nginx &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apk add nodejs &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apk add npm &amp;&amp; \</span></span><br><span class="line"><span class="bash">    <span class="built_in">cd</span> /var/www/localhost/htdocs &amp;&amp; \</span></span><br><span class="line"><span class="bash">    rm -rf node_modules &amp;&amp; \</span></span><br><span class="line"><span class="bash">    npm install &amp;&amp; \</span></span><br><span class="line"><span class="bash">    npm run build;</span></span><br><span class="line"><span class="bash">CMD [<span class="string">"/bin/sh"</span>, <span class="string">"-c"</span>, <span class="string">"exec nginx -g 'daemon off;';"</span>]</span></span><br><span class="line"><span class="bash">WORKDIR /var/www/localhost/htdocs</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 构建</span><br><span class="line">docker build . -t reactdocker</span><br><span class="line"># 运行</span><br><span class="line">docker run -it -d -p 80:80 --name rdocker reactdocker;</span><br><span class="line"># 访问 http://localhost/</span><br><span class="line"># 现在我们的容器已准备好推送到Docker Hub并准备好部署。</span><br></pre></td></tr></table></figure><h3 id="优化Docker镜像"><a href="#优化Docker镜像" class="headerlink" title="优化Docker镜像"></a>优化Docker镜像</h3><ul><li><p>添加 .dockerignore 文件，来移除一下不再需要到依赖文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node_modules</span><br></pre></td></tr></table></figure></li><li><p>接下来修改 Dockerfile来移除我们不需要的依赖</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> alpine</span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">80</span></span><br><span class="line"><span class="keyword">ADD</span><span class="bash"> config/default.conf /etc/nginx/conf.d/default.conf</span></span><br><span class="line"><span class="bash">COPY . /var/www/localhost/htdocs</span></span><br><span class="line"><span class="bash">RUN apk add nginx &amp;&amp; \</span></span><br><span class="line"><span class="bash">    mkdir /run/nginx &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apk add nodejs &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apk add npm &amp;&amp; \</span></span><br><span class="line"><span class="bash">    <span class="built_in">cd</span> /var/www/localhost/htdocs &amp;&amp; \</span></span><br><span class="line"><span class="bash">    npm install &amp;&amp; \</span></span><br><span class="line"><span class="bash">    npm run build &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apk del nodejs &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apk del npm &amp;&amp; \</span></span><br><span class="line"><span class="bash">    mv /var/www/localhost/htdocs/build /var/www/localhost &amp;&amp; \</span></span><br><span class="line"><span class="bash">    <span class="built_in">cd</span> /var/www/localhost/htdocs &amp;&amp; \</span></span><br><span class="line"><span class="bash">    rm -rf * &amp;&amp; \</span></span><br><span class="line"><span class="bash">    mv /var/www/localhost/build /var/www/localhost/htdocs;</span></span><br><span class="line"><span class="bash">CMD [<span class="string">"/bin/sh"</span>, <span class="string">"-c"</span>, <span class="string">"exec nginx -g 'daemon off;';"</span>]</span></span><br><span class="line"><span class="bash">WORKDIR /var/www/localhost/htdocs</span></span><br></pre></td></tr></table></figure></li><li><p>让我们看一下之前构建的容器大小</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker images | grep &quot;reactdocker&quot;;</span><br><span class="line">reactdocker         latest              d10ec33f5720        3 minutes ago       560MB</span><br></pre></td></tr></table></figure></li><li><p>现在我们重新构建</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> build . -t reactdocker;</span><br><span class="line"><span class="comment"># 查看容器大小</span></span><br><span class="line"><span class="attribute">docker</span> images | grep <span class="string">"reactdocker"</span>;</span><br><span class="line"><span class="attribute">reactdocker</span>         latest              f5b6a627f188        <span class="number">5</span> minutes ago       <span class="number">79</span>.7MB</span><br></pre></td></tr></table></figure></li><li><p>再次运行容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d -p 80:80 --name rdocker reactdocker</span><br><span class="line"># 访问 http://localhost/</span><br></pre></td></tr></table></figure></li></ul><h3 id="现在我们已经有了优化过的Docker镜像，让我们将它推送到Docker-Hub。"><a href="#现在我们已经有了优化过的Docker镜像，让我们将它推送到Docker-Hub。" class="headerlink" title="现在我们已经有了优化过的Docker镜像，让我们将它推送到Docker Hub。"></a>现在我们已经有了优化过的Docker镜像，让我们将它推送到Docker Hub。</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker tag reactdocker yuluhuang/reactdocker;</span><br><span class="line">docker push yuluhuang/reactdocker;</span><br></pre></td></tr></table></figure><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -d -p 80:80 --name rdocker yuluhuang/reactdocker;</span><br></pre></td></tr></table></figure><p>参考资料 <a href="https://medium.com/@mannycodes/deploying-reactjs-with-docker-ac16728c0896" target="_blank" rel="noopener">https://medium.com/@mannycodes/deploying-reactjs-with-docker-ac16728c0896</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;自行选择测试项目，或新建项目&quot;&gt;&lt;a href=&quot;#自行选择测试项目，或新建项目&quot; class=&quot;headerlink&quot; title=&quot;自行选择测试项目，或新建项目&quot;&gt;&lt;/a&gt;自行选择测试项目，或新建项目&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;创建&lt;/p&gt;
&lt;figur
      
    
    </summary>
    
      <category term="技术" scheme="http://yuluhuang.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="ReactJS" scheme="http://yuluhuang.github.io/tags/ReactJS/"/>
    
      <category term="docker" scheme="http://yuluhuang.github.io/tags/docker/"/>
    
      <category term="nginx" scheme="http://yuluhuang.github.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>elasticsearch + kafka + zookeeper + frp 案例</title>
    <link href="http://yuluhuang.github.io/2019/02/28/elasticsearch-kafka-zookeeper-frp-%E6%A1%88%E4%BE%8B/"/>
    <id>http://yuluhuang.github.io/2019/02/28/elasticsearch-kafka-zookeeper-frp-案例/</id>
    <published>2019-02-28T03:49:36.000Z</published>
    <updated>2019-02-28T03:50:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>众所周知 elasticsearch 想要发挥最大功效所占内存也不小，即使是单节点，对于小网站或个人网站而言 1核2G的阿里云也是十分昂贵的支出应该用在刀刃上。</p><p>在本地通过 docker 启动 ES:6.4.2 + Kibana:6.4.2 + Logstash:6.4.2(发现它们都有6.4.2这个版本~), 本地是一台2011年的老mac(我是个念旧的人)，以前自己动手升过配置: 8G内存 + 256G固态 + 320G机械, mac 的质量杠杠的，用docker的好处就是隔离，通过docker-compose方便快捷，以后如果架设集群也更加容易,一键就能将环境架设好。</p><p>现在把 ES 架好后，通过云上架设的frp(打开一条tcp通道)将数据传到本地存储或搜索。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[elasticsearch_mac]</span><br><span class="line">type = tcp</span><br><span class="line">auth_token = xxx</span><br><span class="line">bind_addr = 0.0.0.0</span><br><span class="line">listen_port = 9300</span><br></pre></td></tr></table></figure><p>kafka + zookeeper 为了防止请求数据丢失，本地环境不稳定性或frp阻塞都有可能造成请求失败。</p><p>首先我通过 java 服务(spring boot) 将数据写入消息队列(kafka)，通过消费kafka的消息并把数据保存到ES上。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2018</span>-<span class="number">11</span>-<span class="number">14</span> <span class="number">13</span>:<span class="number">42</span>:<span class="number">54.952</span> DEBUG <span class="number">5460</span> --- [ntainer#<span class="number">0</span>-<span class="number">0</span>-C-<span class="number">1</span>] c<span class="selector-class">.y</span><span class="selector-class">.e</span><span class="selector-class">.a</span><span class="selector-class">.s</span><span class="selector-class">.f</span><span class="selector-class">.impl</span><span class="selector-class">.FeedSearchServiceImpl</span>   : &#123;<span class="string">"query"</span>:&#123;<span class="string">"term"</span>:&#123;<span class="string">"id"</span>:&#123;<span class="string">"value"</span>:<span class="string">"5bebb5dea2ed430a4a6dfebc"</span>,<span class="string">"boost"</span>:<span class="number">1.0</span>&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>以上只是提供一个可行的思路，学习es顺便给自己网站多添加一个搜索功能，目前主要还是用的solr</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;众所周知 elasticsearch 想要发挥最大功效所占内存也不小，即使是单节点，对于小网站或个人网站而言 1核2G的阿里云也是十分昂贵的支出应该用在刀刃上。&lt;/p&gt;
&lt;p&gt;在本地通过 docker 启动 ES:6.4.2 + Kibana:6.4.2 + Logstas
      
    
    </summary>
    
      <category term="https://yuluhuang.com" scheme="http://yuluhuang.github.io/categories/https-yuluhuang-com/"/>
    
    
      <category term="docker" scheme="http://yuluhuang.github.io/tags/docker/"/>
    
      <category term="solr" scheme="http://yuluhuang.github.io/tags/solr/"/>
    
      <category term="elasticsearch" scheme="http://yuluhuang.github.io/tags/elasticsearch/"/>
    
      <category term="kafka" scheme="http://yuluhuang.github.io/tags/kafka/"/>
    
      <category term="zookeeper" scheme="http://yuluhuang.github.io/tags/zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>通过 nginx 配置基本的安全验证</title>
    <link href="http://yuluhuang.github.io/2019/02/28/%E9%80%9A%E8%BF%87-nginx-%E9%85%8D%E7%BD%AE%E5%9F%BA%E6%9C%AC%E7%9A%84%E5%AE%89%E5%85%A8%E9%AA%8C%E8%AF%81/"/>
    <id>http://yuluhuang.github.io/2019/02/28/通过-nginx-配置基本的安全验证/</id>
    <published>2019-02-28T03:45:33.000Z</published>
    <updated>2019-02-28T03:49:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>以前我也有个疑问 像solr, elasticsearch 我布置好之后如果我想远程访问只能开放端口，而他们本身并没有验证，当然有其他策略比如，配置一台跳板机，只允许特定的跳板机访问, 自己没那么好条件也不想弄那么麻烦就采用简单的方法做验证</p><p>步骤</p><ol><li>在 nginx 配置目录下创建密码</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir password</span><br><span class="line"><span class="built_in">cd</span> password/</span><br><span class="line"><span class="built_in">printf</span> <span class="string">"root:<span class="variable">$(openssl passwd -crypt password)</span>\n"</span> &gt; passwords <span class="comment"># 密码不超过8位</span></span><br><span class="line"><span class="built_in">pwd</span></span><br><span class="line">/etc/nginx/password <span class="comment"># 在 nginx中 使用</span></span><br></pre></td></tr></table></figure><ol start="2"><li>配置nginx</li></ol><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> elasticsearch &#123;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">127.0.0.1:9200</span> weight=<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span> <span class="number">19200</span>;</span><br><span class="line">        <span class="attribute">server_name</span> localhost;</span><br><span class="line">        <span class="attribute">auth_basic</span> <span class="string">"Protection"</span>;</span><br><span class="line">        <span class="attribute">auth_basic_user_file</span> /etc/nginx/password/passwords;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">                <span class="attribute">proxy_pass</span> http://elasticsearch;</span><br><span class="line">                <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>重启nginx, 打开 localhost:19200</li></ol><p>这让我想起给solr做验证时采用非常麻烦的方法真是蛋蛋疼<br>如果你的解决方案很复杂你要相信一定还有更好的你不知道的解决方案，去寻找吧少年</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以前我也有个疑问 像solr, elasticsearch 我布置好之后如果我想远程访问只能开放端口，而他们本身并没有验证，当然有其他策略比如，配置一台跳板机，只允许特定的跳板机访问, 自己没那么好条件也不想弄那么麻烦就采用简单的方法做验证&lt;/p&gt;
&lt;p&gt;步骤&lt;/p&gt;
&lt;o
      
    
    </summary>
    
      <category term="https://yuluhuang.com" scheme="http://yuluhuang.github.io/categories/https-yuluhuang-com/"/>
    
    
      <category term="nginx" scheme="http://yuluhuang.github.io/tags/nginx/"/>
    
      <category term="solr" scheme="http://yuluhuang.github.io/tags/solr/"/>
    
      <category term="elasticsearch" scheme="http://yuluhuang.github.io/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>mysql with docker</title>
    <link href="http://yuluhuang.github.io/2019/02/28/mysql-with-docker/"/>
    <id>http://yuluhuang.github.io/2019/02/28/mysql-with-docker/</id>
    <published>2019-02-28T03:35:50.000Z</published>
    <updated>2019-02-28T03:47:01.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li>通过 kitematic 安装 mysql8 镜像不能直接使用</li><li><p>设置root密码<br><img src="/img/docker-mysql-1.png" alt="docker-mysql-1"></p></li><li><p>修改固定端口<br><img src="/img/docker-mysql-2.png" alt="docker-mysql-2"></p></li><li>映射本地目录<br><img src="/img/docker-mysql-3.png" alt="docker-mysql-3"></li><li>连接本地数据库<br><img src="/img/docker-mysql-4.png" alt="docker-mysql-4"><br>问题<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Authentication plugin &apos;caching_sha2_password&apos; cannot be loaded: dlopen(/usr/local/mysql/lib/plugin/caching_sha2_password.so, 2): image not found</span><br></pre></td></tr></table></figure></li></ol><p>解决</p><ol><li><p>进入终端<br><img src="/img/docker-mysql-5.png" alt="docker-mysql-5"></p></li><li><p>执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -proot</span><br><span class="line">ALTER USER &apos;root’@&apos;%&apos; IDENTIFIED WITH mysql_native_password BY &apos;root&apos;;</span><br></pre></td></tr></table></figure></li></ol><p><img src="/img/docker-mysql-6.png" alt="docker-mysql-6"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;通过 kitematic 安装 mysql8 镜像不能直接使用&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置root密码&lt;br&gt;&lt;img src=&quot;/img/docker-mysql-1.png&quot; alt=&quot;docker-mysql-1&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修
      
    
    </summary>
    
      <category term="https://yuluhuang.com" scheme="http://yuluhuang.github.io/categories/https-yuluhuang-com/"/>
    
    
      <category term="docker" scheme="http://yuluhuang.github.io/tags/docker/"/>
    
      <category term="mysql" scheme="http://yuluhuang.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>docker 使用场景之测试</title>
    <link href="http://yuluhuang.github.io/2018/10/14/docker-%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF%E4%B9%8B%E6%B5%8B%E8%AF%95/"/>
    <id>http://yuluhuang.github.io/2018/10/14/docker-使用场景之测试/</id>
    <published>2018-10-14T04:07:05.000Z</published>
    <updated>2019-03-09T12:17:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>参考: <a href="https://www.youtube.com/watch?v=k5iwKUZY9tk" target="_blank" rel="noopener">https://www.youtube.com/watch?v=k5iwKUZY9tk</a></p><h2 id="测试环境-mac"><a href="#测试环境-mac" class="headerlink" title="测试环境 mac"></a>测试环境 mac</h2><p>1 Get docker image.</p><p>$ docker pull chusiang/takaojs1607</p><p>1.1 原镜像较老 如果要用自己的镜像安装环境(略过)</p><ol><li><p>安装selenium<br>sudo pip install selenium</p></li><li><p>安装Chrome浏览器<br>sudo apt-get install libxss1 libappindicator1 libindicator7<br>wget <a href="https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb" target="_blank" rel="noopener">https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb</a><br>sudo dpkg -i google-chrome*.deb<br>sudo apt-get install -f</p></li><li><p>安装ChromeDriver<br>在运行过程中ChromeDriver会与Chrome浏览器不兼容，重新下载ChromeDriver地址</p></li></ol><p>sudo apt-get install unzip<br>wget -N <a href="http://chromedriver.storage.googleapis.com/2.42/chromedriver_linux64.zip" target="_blank" rel="noopener">http://chromedriver.storage.googleapis.com/2.42/chromedriver_linux64.zip</a><br>unzip chromedriver_linux64.zip<br>chmod +x chromedriver<br>sudo mv -f chromedriver /usr/local/share/chromedriver<br>sudo ln -s /usr/local/share/chromedriver /usr/local/bin/chromedriver<br>sudo ln -s /usr/local/share/chromedriver /usr/bin/chromedriver</p><p>2 Get vnc port</p><p>docker port $(docker run –name e2e -d -P chusiang/takaojs1607) 5900<br>or<br>docker run –name e2e -d -P chusiang/takaojs1607<br>docker port e2e 5900</p><p>返回 0.0.0.0:32768</p><p>3 打开 Remote with VNC client(看测试效果)</p><p>open vnc://:<a href="mailto:secret@127.0.0.1" target="_blank" rel="noopener">secret@127.0.0.1</a>:32768</p><h2 id="开始测试"><a href="#开始测试" class="headerlink" title="开始测试"></a>开始测试</h2><p>1 Enter e2e container.</p><p>$ docker exec -it e2e bash</p><p>2  Switch user wget</p><p>su - seluser<br>该用户下已经有测试代码</p><p>3 进入安装环境 并运行</p><p>ls &amp;&amp; cd angular-seed/ &amp;&amp; npm run start &amp;</p><p>4 Run e2e test 运行测试</p><p>npm run protractor</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;参考: &lt;a href=&quot;https://www.youtube.com/watch?v=k5iwKUZY9tk&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.youtube.com/watch?v=k5iwKUZY9tk&lt;/a&gt;&lt;
      
    
    </summary>
    
      <category term="技术" scheme="http://yuluhuang.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="docker" scheme="http://yuluhuang.github.io/tags/docker/"/>
    
      <category term="e2e" scheme="http://yuluhuang.github.io/tags/e2e/"/>
    
      <category term="测试" scheme="http://yuluhuang.github.io/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Github 授权登录 让你的网站更轻巧</title>
    <link href="http://yuluhuang.github.io/2018/10/12/Github-%E6%8E%88%E6%9D%83%E7%99%BB%E5%BD%95-%E8%AE%A9%E4%BD%A0%E7%9A%84%E7%BD%91%E7%AB%99%E6%9B%B4%E8%BD%BB%E5%B7%A7/"/>
    <id>http://yuluhuang.github.io/2018/10/12/Github-授权登录-让你的网站更轻巧/</id>
    <published>2018-10-12T03:25:37.000Z</published>
    <updated>2019-02-28T03:19:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>例图<br><img src="/img/github_authorize.png" alt="github_authorize"></p><p>1 注册 github 账号<br>2 <code>Settings -&gt; Developer applications -&gt; new OAuth App</code><br><img src="/img/github_new_OAuth.png" alt="github_new_OAuth"></p><p><code>Authorization callback URL</code>－－后端回调url, github 会调用这个url 将<code>code</code>发送给你，你需要获取这个<code>code</code> 之后，再去获取  <code>access_token</code> ，再通过  <code>access_token</code> 获取用户信息</p><p>3 你已创建好 OAuth Apps 我们开始使用<br>3.1 你的网站上需要一个登录按钮<br><img src="/img/github_logo.png" alt="github_logo"><br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;a class="btn btn-light btn-sm" href="https://github.com/login/oauth/authorize?client_id=xxx&amp;state=xxx&amp;redirect_uri=xxx"&gt;</span><br><span class="line">    &lt;svg height="<span class="number">14</span>" class="octicon octicon-mark-github" viewBox="<span class="number">0 0 16 16</span>" version="<span class="number">1</span>.<span class="number">1</span>" width="<span class="number">14</span>"</span><br><span class="line">         aria-hidden="true"&gt;</span><br><span class="line">        &lt;path fill-rule="evenodd"</span><br><span class="line">              d="M<span class="number">8 0C3.58</span> <span class="number">0 0 3.58</span> <span class="number">0 8c0 3</span>.<span class="number">54 2.29 6</span>.<span class="number">53 5.47 7</span>.<span class="number">59.4.07.55</span>-.<span class="number">17</span>.<span class="number">55</span>-.<span class="number">38</span> <span class="number">0</span>-.<span class="number">19</span>-.<span class="number">01</span>-.<span class="number">82</span>-.<span class="number">01-1.49-2</span>.<span class="number">01.37-2.53</span>-.<span class="number">49</span>-<span class="number">2</span>.<span class="number">69</span>-.<span class="number">94</span>-.<span class="number">09</span>-.<span class="number">23</span>-.<span class="number">48</span>-.<span class="number">94</span>-.<span class="number">82</span>-<span class="number">1</span>.<span class="number">13</span>-.<span class="number">28</span>-.<span class="number">15</span>-.<span class="number">68</span>-.<span class="number">52</span>-.<span class="number">01</span>-.<span class="number">53</span>.<span class="number">63</span>-.<span class="number">01 1.08.58</span> <span class="number">1.23.82.72</span> <span class="number">1.21 1.87</span>.<span class="number">87 2.33.66</span>.<span class="number">07</span>-.<span class="number">52</span>.<span class="number">28</span>-.<span class="number">87.51-1.07</span>-<span class="number">1</span>.<span class="number">78</span>-.<span class="number">2</span>-<span class="number">3</span>.<span class="number">64</span>-.<span class="number">89-3.64-3</span>.<span class="number">95</span> <span class="number">0</span>-.<span class="number">87.31-1.59</span>.<span class="number">82</span>-<span class="number">2</span>.<span class="number">15</span>-.<span class="number">08</span>-.<span class="number">2</span>-.<span class="number">36-1.02.08</span>-<span class="number">2.12 0 0</span> .<span class="number">67</span>-.<span class="number">21 2.2.82</span>.<span class="number">64</span>-.<span class="number">18</span> <span class="number">1</span>.<span class="number">32</span>-.<span class="number">27</span> <span class="number">2</span>-.<span class="number">27.68 0 1</span>.<span class="number">36</span>.<span class="number">09</span> <span class="number">2</span> .<span class="number">27 1.53-1</span>.<span class="number">04</span> <span class="number">2</span>.<span class="number">2</span>-.<span class="number">82</span> <span class="number">2</span>.<span class="number">2</span>-.<span class="number">82.44 1.1</span>.<span class="number">16 1.92.08</span> <span class="number">2.12.51.56</span>.<span class="number">82 1.27.82</span> <span class="number">2.15 0 3</span>.<span class="number">07-1.87 3</span>.<span class="number">75-3.65 3</span>.<span class="number">95.29.25.54</span>.<span class="number">73.54 1.48</span> <span class="number">0</span> <span class="number">1</span>.<span class="number">07</span>-.<span class="number">01</span> <span class="number">1</span>.<span class="number">93</span>-.<span class="number">01 2.2 0</span> .<span class="number">21.15.46.55</span>.<span class="number">38A8.013</span> <span class="number">8.013 0</span> <span class="number">0</span> <span class="number">0 16 8c0</span>-<span class="number">4.42-3.58</span>-<span class="number">8</span>-<span class="number">8</span>-<span class="number">8</span>z"&gt;&lt;/path&gt;</span><br><span class="line">    &lt;/svg&gt;</span><br><span class="line">    &lt;span style="font-size: <span class="number">16</span>px<span class="comment">;"&gt;登录&lt;/span&gt;</span></span><br><span class="line">&lt;/a&gt;</span><br></pre></td></tr></table></figure></p><p>注意他的 href 中client_id 从你创建的 OAuth Apps 找到，redirect_uri 即 Authorization callback URL(注: 要使用公网ip地址)</p><p>3.2 上一步你拿到code，现在获取 access_token</p><p><code>&quot;https://github.com/login/oauth/access_token?client_id=xxx&amp;client_secret=xxx&amp;code=&quot; + code + &quot;&amp;redirect_uri=xxx&quot;;</code><br>注：每个参数都是必须的具体参考文档 <code>https://developer.github.com/v3/</code><br><code>client_id</code> 和 <code>client_secret</code> 从应用中拿到即可 <code>redirect_uri</code>  即上一步中的一样即可</p><p>  3.3获取用户信息<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> access_token_url = <span class="string">"https://api.github.com/?access_token="</span> + access_token;</span><br><span class="line"><span class="keyword">let</span> headers = &#123;<span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3571.0 Safari/537.36'</span>&#125;;</span><br><span class="line"><span class="comment">// GET</span></span><br><span class="line">request(access_token_url, &#123;headers&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, rs, userInfo</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (err) &#123;</span><br><span class="line">        logger.error(err)</span><br><span class="line">    &#125;</span><br><span class="line">    logger.info(userInfo);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>注：* 请求头里必须有  User-Agent</p><pre><code>* 必须用 get 请求</code></pre><p>结果<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"login"</span>: <span class="string">"yuluhuang"</span>,</span><br><span class="line">  <span class="attr">"id"</span>: <span class="number">5743499</span>,</span><br><span class="line">  <span class="attr">"node_id"</span>: <span class="string">"MDQ6VXNlcjU3NDM0OTk="</span>,</span><br><span class="line">  <span class="attr">"avatar_url"</span>: <span class="string">"https://avatars1.githubusercontent.com/u/5743499?v=4"</span>,</span><br><span class="line">  <span class="attr">"gravatar_id"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"url"</span>: <span class="string">"https://api.github.com/users/yuluhuang"</span>,</span><br><span class="line">  <span class="attr">"html_url"</span>: <span class="string">"https://github.com/yuluhuang"</span>,</span><br><span class="line">  <span class="attr">"followers_url"</span>: <span class="string">"https://api.github.com/users/yuluhuang/followers"</span>,</span><br><span class="line">  <span class="attr">"following_url"</span>: <span class="string">"https://api.github.com/users/yuluhuang/following&#123;/other_user&#125;"</span>,</span><br><span class="line">  <span class="attr">"gists_url"</span>: <span class="string">"https://api.github.com/users/yuluhuang/gists&#123;/gist_id&#125;"</span>,</span><br><span class="line">  <span class="attr">"starred_url"</span>: <span class="string">"https://api.github.com/users/yuluhuang/starred&#123;/owner&#125;&#123;/repo&#125;"</span>,</span><br><span class="line">  <span class="attr">"subscriptions_url"</span>: <span class="string">"https://api.github.com/users/yuluhuang/subscriptions"</span>,</span><br><span class="line">  <span class="attr">"organizations_url"</span>: <span class="string">"https://api.github.com/users/yuluhuang/orgs"</span>,</span><br><span class="line">  <span class="attr">"repos_url"</span>: <span class="string">"https://api.github.com/users/yuluhuang/repos"</span>,</span><br><span class="line">  <span class="attr">"events_url"</span>: <span class="string">"https://api.github.com/users/yuluhuang/events&#123;/privacy&#125;"</span>,</span><br><span class="line">  <span class="attr">"received_events_url"</span>: <span class="string">"https://api.github.com/users/yuluhuang/received_events"</span>,</span><br><span class="line">  <span class="attr">"type"</span>: <span class="string">"User"</span>,</span><br><span class="line">  <span class="attr">"site_admin"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"luhuang"</span>,</span><br><span class="line">  <span class="attr">"company"</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="attr">"blog"</span>: <span class="string">"https://yuluhuang.com"</span>,</span><br><span class="line">  <span class="attr">"location"</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="attr">"email"</span>: <span class="string">"504367857@qq.com"</span>,</span><br><span class="line">  <span class="attr">"hireable"</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="attr">"bio"</span>: <span class="literal">null</span>,</span><br><span class="line">  <span class="attr">"public_repos"</span>: <span class="number">30</span>,</span><br><span class="line">  <span class="attr">"public_gists"</span>: <span class="number">4</span>,</span><br><span class="line">  <span class="attr">"followers"</span>: <span class="number">5</span>,</span><br><span class="line">  <span class="attr">"following"</span>: <span class="number">5</span>,</span><br><span class="line">  <span class="attr">"created_at"</span>: <span class="string">"2013-10-22T04:31:11Z"</span>,</span><br><span class="line">  <span class="attr">"updated_at"</span>: <span class="string">"2018-09-30T03:25:01Z"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;例图&lt;br&gt;&lt;img src=&quot;/img/github_authorize.png&quot; alt=&quot;github_authorize&quot;&gt;&lt;/p&gt;
&lt;p&gt;1 注册 github 账号&lt;br&gt;2 &lt;code&gt;Settings -&amp;gt; Developer applications
      
    
    </summary>
    
      <category term="https://yuluhuang.com" scheme="http://yuluhuang.github.io/categories/https-yuluhuang-com/"/>
    
    
      <category term="github" scheme="http://yuluhuang.github.io/tags/github/"/>
    
      <category term="auth" scheme="http://yuluhuang.github.io/tags/auth/"/>
    
  </entry>
  
  <entry>
    <title>2018-9-22 记</title>
    <link href="http://yuluhuang.github.io/2018/09/22/2018-9-22-%E8%AE%B0/"/>
    <id>http://yuluhuang.github.io/2018/09/22/2018-9-22-记/</id>
    <published>2018-09-22T03:37:37.000Z</published>
    <updated>2019-03-09T12:17:41.000Z</updated>
    
    <content type="html"><![CDATA[<pre><code>昨天吃的太好拉肚子了，短期记忆深刻，可以记上好久。</code></pre><p>晚上回家惯例打开阿里云app看一眼波动，香港的服务器需要续费了，一年1k多，三年便宜点但是我不会续那么久，且不说曾经被封过一段时间，单单每个月一封警告邮件看着都蛋疼。<br>所以尝试一下 搬瓦工，去官网一看赶巧 9.20 补货$19.9/年的方案，叠加优惠券花了130元不到，还是人民币贬值后。听说3年前的套餐只要$3.9/年，羡慕老套餐用户，当然配置低点<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">10</span>G ssd</span><br><span class="line"><span class="number">512</span>M 内存</span><br><span class="line"><span class="number">500</span>G/m 流量</span><br></pre></td></tr></table></figure></p><p>目前阿里云配置<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">40</span>G 云盘</span><br><span class="line"><span class="number">1</span>G 内存</span><br><span class="line">不限流 下载速度 <span class="number">100</span>k/s 全天候一个月能攒 <span class="number">500</span>G吗~</span><br></pre></td></tr></table></figure></p><p>价格老贵，当时活动价350左右的样子，现在续费要1000多，我又不傻果断放弃</p><p>##<br>晚上注册付费，支持支付宝很方便，架设方便，顺便跑了个小程序才占了一点点资源，下载速度有1M,150mm的延迟，阿里云56mm, 大体上相差不大，毕竟一个在香港一个在美国</p><p>##<br>今天把公司这边的客户端搞搞，装个ubuntu-desktop, 试试 anbox<br>此处省略n操作，结论根本不好时，之前我就想mac里使用android apk, 当时应该问一下辅导，在网上瞎找，<br>之后用的都是以前玩过的东西 Genymotion 模拟器，搞到第二天3，4点好像又熬夜了，搞那么久一个是摸索造成，一个是眼贱浪费了好多时间Genymotion-ARM-Translation也是一个，<br>两天就做了这么几件事，好吧接下来还有点时间</p><p><img src="/img/4B7987CF-F1B2-4BF2-86CF-85CE91EFD698.png" alt="效果图"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;昨天吃的太好拉肚子了，短期记忆深刻，可以记上好久。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;晚上回家惯例打开阿里云app看一眼波动，香港的服务器需要续费了，一年1k多，三年便宜点但是我不会续那么久，且不说曾经被封过一段时间，单单每个月一封警告邮件看着都蛋疼。&lt;br&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MongoDB 读写分离之主从配置</title>
    <link href="http://yuluhuang.github.io/2018/09/14/MongoDB-%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E4%B9%8B%E4%B8%BB%E4%BB%8E%E9%85%8D%E7%BD%AE/"/>
    <id>http://yuluhuang.github.io/2018/09/14/MongoDB-读写分离之主从配置/</id>
    <published>2018-09-14T05:51:37.000Z</published>
    <updated>2019-02-28T03:19:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>优点</p><ol><li>只负责各自的写和读，极大程度的缓解X锁和S锁争用，减轻DB的负载，提升并发和吞吐</li><li>故障切换</li></ol><p>缺点</p><ol><li>主从延迟</li></ol><p>场景</p><ol><li>读多写少</li><li>至少2台服务器</li><li>数据实时性要求不高</li></ol><p>例子<br>keyFile 生成参考 <a href="https://docs.mongodb.com/manual/tutorial/enforce-keyfile-access-control-in-existing-replica-set/" target="_blank" rel="noopener">https://docs.mongodb.com/manual/tutorial/enforce-keyfile-access-control-in-existing-replica-set/</a></p><p>1主(27017)+1从(27017)+1裁判机(27018，挂载在任一服务器上, 资源消耗小)</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mongod.conf 3.4.7</span></span><br><span class="line"><span class="comment"># for documentation of all options, see:</span></span><br><span class="line"><span class="comment">#   http://docs.mongodb.org/manual/reference/configuration-options/</span></span><br><span class="line"><span class="comment"># Where and how to store data.</span></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line"><span class="attr">  dbPath:</span> <span class="string">/var/lib/mongodb</span> <span class="comment"># 裁判机 需要另设路径 /root/mongo/data/db</span></span><br><span class="line"><span class="attr">  journal:</span></span><br><span class="line"><span class="attr">    enabled:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#  engine:</span></span><br><span class="line"><span class="comment">#  mmapv1:</span></span><br><span class="line"><span class="comment">#  wiredTiger:</span></span><br><span class="line"><span class="comment"># where to write logging data.</span></span><br><span class="line"><span class="attr">systemLog:</span></span><br><span class="line"><span class="attr">  destination:</span> <span class="string">file</span></span><br><span class="line"><span class="attr">  logAppend:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">/var/log/mongodb/mongod.log</span></span><br><span class="line"><span class="comment"># network interfaces</span></span><br><span class="line"><span class="attr">net:</span></span><br><span class="line"><span class="attr">  port:</span> <span class="number">27017</span></span><br><span class="line"><span class="attr">  bindIp:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> <span class="comment"># 允许远程连接</span></span><br><span class="line"><span class="attr">processManagement:</span></span><br><span class="line"><span class="attr">  fork:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">security:</span></span><br><span class="line"><span class="attr">  keyFile:</span> <span class="string">/root/mongo/keyfile</span> <span class="comment"># 秘钥文件 同一个   chmod 600 keyfile</span></span><br><span class="line"><span class="comment">#operationProfiling:</span></span><br><span class="line"><span class="attr">replication:</span></span><br><span class="line"><span class="attr">  oplogSizeMB:</span> <span class="number">2048</span> <span class="comment"># 数据同步前存储空间</span></span><br><span class="line"><span class="attr">  replSetName:</span> <span class="string">rs0</span> <span class="comment"># 副本集名称</span></span><br><span class="line"><span class="comment">#sharding:</span></span><br><span class="line"><span class="comment">## Enterprise-Only Options:</span></span><br><span class="line"><span class="comment">#auditLog:</span></span><br><span class="line"><span class="string">~</span></span><br></pre></td></tr></table></figure><p>步骤<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span> 启动mongo</span><br><span class="line"> mongod <span class="params">--config</span> <span class="string">/etc/mongod.conf</span></span><br><span class="line"></span><br><span class="line"><span class="string">//</span> 打开新终端，创建用户后退出</span><br><span class="line">mongod <span class="params">--port</span> 27017 <span class="params">--dbpath</span> <span class="string">/var/lib/mongodb</span></span><br><span class="line"></span><br><span class="line"><span class="string">//</span></span><br><span class="line">service mongodb stop</span><br><span class="line"></span><br><span class="line"><span class="string">//</span></span><br><span class="line">mkdir rs0-0 rs0-1 rs0-2</span><br><span class="line"></span><br><span class="line"><span class="string">//</span> 创建mongod实例</span><br><span class="line">mongod <span class="params">--port</span> 27017 <span class="params">--dbpath</span> <span class="string">/root/mongo/rs0-0</span> <span class="params">--replSet</span> rs0 <span class="params">--keyFile</span> <span class="string">/root/mongo/keyfile</span> <span class="params">--smallfiles</span> <span class="params">--oplogSize</span> 2048 &amp;   <span class="comment">#--oplogsize 单位M.</span></span><br><span class="line"></span><br><span class="line"><span class="string">//</span> 主从配置</span><br><span class="line">mongo <span class="params">--port</span> 27017</span><br><span class="line"></span><br><span class="line">rsconf = &#123;</span><br><span class="line">                <span class="string">"_id"</span> : <span class="string">"rs0"</span>,</span><br><span class="line">                <span class="string">"members"</span> : [</span><br><span class="line">                        &#123;</span><br><span class="line">                                <span class="string">"_id"</span> : 0,</span><br><span class="line">                                <span class="string">"host"</span> : <span class="string">"127.0.0.1:27017"</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                                <span class="string">"_id"</span> : 1,</span><br><span class="line">                                <span class="string">"host"</span> : <span class="string">"127.0.0.1:27018"</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        &#123;</span><br><span class="line">                                <span class="string">"_id"</span> : 2,</span><br><span class="line">                                <span class="string">"host"</span> : <span class="string">"127.0.0.1:27019"</span></span><br><span class="line">                        &#125;</span><br><span class="line">                ]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"> rs.initiate<span class="params">(rsconf)</span>;<span class="string">//</span>初始化副本集就完成了</span><br><span class="line"><span class="string">//</span> 添加节点</span><br><span class="line">rs.add<span class="params">(“ip:port”)</span></span><br><span class="line"><span class="string">//</span> 添加仲裁节点</span><br><span class="line">rs.addArb<span class="params">(“ip:27018")</span></span><br></pre></td></tr></table></figure></p><p>node 数据库连接<br><code>mongodb://username:password@ip:27017,ip:27017,ip:27018/db?replicaSet=rs0&amp;authSource=admin</code></p><p>[个人网站]  <a href="https://yuluhuang.com/" target="_blank" rel="noopener">https://yuluhuang.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;优点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;只负责各自的写和读，极大程度的缓解X锁和S锁争用，减轻DB的负载，提升并发和吞吐&lt;/li&gt;
&lt;li&gt;故障切换&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缺点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;主从延迟&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;场景&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;读
      
    
    </summary>
    
      <category term="https://yuluhuang.com" scheme="http://yuluhuang.github.io/categories/https-yuluhuang-com/"/>
    
    
      <category term="mongo" scheme="http://yuluhuang.github.io/tags/mongo/"/>
    
      <category term="mongodb" scheme="http://yuluhuang.github.io/tags/mongodb/"/>
    
      <category term="数据库" scheme="http://yuluhuang.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>react vs vue</title>
    <link href="http://yuluhuang.github.io/2018/05/02/react-vs-vue/"/>
    <id>http://yuluhuang.github.io/2018/05/02/react-vs-vue/</id>
    <published>2018-05-02T07:45:09.000Z</published>
    <updated>2019-02-28T03:19:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="谷歌趋势"><a href="#谷歌趋势" class="headerlink" title="谷歌趋势"></a>谷歌趋势</h2><p><img src="/img/7D08E09D-41CA-4A5A-B70E-4363263B4C68.png" alt="vue"></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><h3 id="vue-由尤雨溪-全职开发"><a href="#vue-由尤雨溪-全职开发" class="headerlink" title="vue 由尤雨溪 全职开发"></a>vue 由尤雨溪 全职开发</h3><h3 id="react-由Facebook-开发"><a href="#react-由Facebook-开发" class="headerlink" title="react 由Facebook 开发"></a>react 由Facebook 开发</h3><h2 id="共同点"><a href="#共同点" class="headerlink" title="共同点"></a>共同点</h2><ul><li>支持虚拟dom</li><li>支持组件化开发</li><li>支付单页面应用（spa）</li><li>支持服务端渲染</li></ul><h2 id="差异"><a href="#差异" class="headerlink" title="差异"></a>差异</h2><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">学习曲线</th><th style="text-align:center">模板</th><th style="text-align:center">star</th></tr></thead><tbody><tr><td style="text-align:center">react</td><td style="text-align:center">高</td><td style="text-align:center">jsx</td><td style="text-align:center">92.8K</td></tr><tr><td style="text-align:center">vue</td><td style="text-align:center">底</td><td style="text-align:center">html</td><td style="text-align:center">94.8k</td></tr></tbody></table><hr><p><img src="/img/0F585F21-929F-4225-82F2-73763D1E5879.png" alt="vue"><br><img src="/img/6B197ACD-98AC-4C51-8A24-7F604A55E666.png" alt="vue"></p><ul><li>vue属于mvvm框架，支持双向绑定</li><li>vue可以单独引入作为库使用</li><li>vue官方维护cli脚手架，自动构建项目，对于中小型快速开发极其有利，大型项目也可以以此为基础</li><li>react 常见的 <code>creact-react-app</code> 脚手架可以创建一个基础项目，个人开源脚手架繁杂，没用官方统一的解决方案</li><li>react 一开始只支持es6, 之后也可以单独使用不过要引入react-dom来解析</li><li>由于react 专注于 view 层，属于单向绑定，todo 为例 react的代码量往往大于vue</li></ul><h2 id="状态管理和数据绑定"><a href="#状态管理和数据绑定" class="headerlink" title="状态管理和数据绑定"></a>状态管理和数据绑定</h2><ul><li>Vue 官方推荐 vuex</li><li>React 常见 redux，mobx, 因为react社区活跃，衍生出各个库，所有没有统一公认的解决方案</li></ul><h2 id="ui"><a href="#ui" class="headerlink" title="ui"></a>ui</h2><p>vue</p><ul><li>Element UI</li></ul><p>React</p><ul><li>Ant design<h2 id="移动端"><a href="#移动端" class="headerlink" title="移动端"></a>移动端</h2></li><li>Vue 有 weex 诟病多</li><li>React 有 react-native 被多数公司采用的移动方案</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;谷歌趋势&quot;&gt;&lt;a href=&quot;#谷歌趋势&quot; class=&quot;headerlink&quot; title=&quot;谷歌趋势&quot;&gt;&lt;/a&gt;谷歌趋势&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/img/7D08E09D-41CA-4A5A-B70E-4363263B4C68.png&quot; alt=&quot;
      
    
    </summary>
    
      <category term="https://yuluhuang.com" scheme="http://yuluhuang.github.io/categories/https-yuluhuang-com/"/>
    
    
      <category term="vue" scheme="http://yuluhuang.github.io/tags/vue/"/>
    
      <category term="react" scheme="http://yuluhuang.github.io/tags/react/"/>
    
  </entry>
  
  <entry>
    <title>MySQL运算符介绍</title>
    <link href="http://yuluhuang.github.io/2018/04/28/MySQL%E8%BF%90%E7%AE%97%E7%AC%A6%E4%BB%8B%E7%BB%8D/"/>
    <id>http://yuluhuang.github.io/2018/04/28/MySQL运算符介绍/</id>
    <published>2018-04-28T09:13:06.000Z</published>
    <updated>2019-02-28T03:19:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h1><p><code>算数运算符， 比较运算符， 逻辑运算符， 位操作运算符</code></p><h2 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h2><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">+</td><td style="text-align:center">加法运算符</td></tr><tr><td style="text-align:center">-</td><td style="text-align:center">减法运算符</td></tr><tr><td style="text-align:center">*</td><td style="text-align:center">乘法运算符</td></tr><tr><td style="text-align:center">/</td><td style="text-align:center">除法运算符</td></tr><tr><td style="text-align:center">%</td><td style="text-align:center">求余运算符</td></tr></tbody></table><h2 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h2><p>比较运算符的结果总是1， 0， null</p><table><thead><tr><th style="text-align:center">运算符</th><th style="text-align:center">作用</th></tr></thead><tbody><tr><td style="text-align:center">=</td><td style="text-align:center">等于</td></tr><tr><td style="text-align:center">&lt;=&gt;</td><td style="text-align:center">安全的等于</td></tr><tr><td style="text-align:center">&lt;&gt;/!=</td><td style="text-align:center">不等于</td></tr><tr><td style="text-align:center">&lt;=</td><td style="text-align:center">小于等于</td></tr><tr><td style="text-align:center">&gt;=</td><td style="text-align:center">大于等于</td></tr><tr><td style="text-align:center">&gt;</td><td style="text-align:center">大于</td></tr><tr><td style="text-align:center">&lt;</td><td style="text-align:center">小于</td></tr><tr><td style="text-align:center">IS NULL</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">IS NOT NULL</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">LEAST</td><td style="text-align:center">返回最小值</td></tr><tr><td style="text-align:center">GREATEST</td><td style="text-align:center">返回最大值</td></tr><tr><td style="text-align:center">BETWEEN AND</td><td style="text-align:center">判断一个值是否在两个值之间</td></tr><tr><td style="text-align:center">ISNULL</td><td style="text-align:center">判断一个值是否为null</td></tr><tr><td style="text-align:center">IN</td><td style="text-align:center">判断一个值在in 后面的列表中</td></tr><tr><td style="text-align:center">NOT IN</td><td style="text-align:center">判断一个值不在in 后面的列表中</td></tr><tr><td style="text-align:center">LIKE</td><td style="text-align:center">通配符匹配</td></tr><tr><td style="text-align:center">REGEXP</td><td style="text-align:center">正则表达式匹配</td></tr></tbody></table><ol><li>和 null 运算的结果都为null<h3 id="和-lt-gt"><a href="#和-lt-gt" class="headerlink" title="= 和 &lt;=&gt;"></a>= 和 &lt;=&gt;</h3></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 1=0, &apos;2&apos;=2, null=null, &apos;2&apos;&lt;=&gt;2,null&lt;=&gt;null, 2=null;</span><br><span class="line">+-----+-------+-----------+---------+-------------+--------+</span><br><span class="line">| 1=0 | &apos;2&apos;=2 | null=null | &apos;2&apos;&lt;=&gt;2 | null&lt;=&gt;null | 2=null |</span><br><span class="line">+-----+-------+-----------+---------+-------------+--------+</span><br><span class="line">|   0 |     1 |      NULL |       1 |           1 |   NULL |</span><br><span class="line">+-----+-------+-----------+---------+-------------+--------+</span><br></pre></td></tr></table></figure><h3 id="lt-gt-or"><a href="#lt-gt-or" class="headerlink" title="&lt;&gt; or !="></a>&lt;&gt; or !=</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 1&lt;&gt;0, &apos;2&apos;&lt;&gt;2, &apos;2&apos;!=null, null&lt;&gt;null,null!=null;</span><br><span class="line">+------+--------+-----------+------------+------------+</span><br><span class="line">| 1&lt;&gt;0 | &apos;2&apos;&lt;&gt;2 | &apos;2&apos;!=null | null&lt;&gt;null | null!=null |</span><br><span class="line">+------+--------+-----------+------------+------------+</span><br><span class="line">|    1 |      0 |      NULL |       NULL |       NULL |</span><br><span class="line">+------+--------+-----------+------------+------------+</span><br></pre></td></tr></table></figure><h3 id="IS-NULL-AND-IS-NOT-NULL"><a href="#IS-NULL-AND-IS-NOT-NULL" class="headerlink" title="IS NULL AND IS NOT NULL"></a>IS NULL AND IS NOT NULL</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select NULL IS NULL, ISNULL(NULL), 10 IS NOT NULL;</span><br><span class="line">+--------------+--------------+----------------+</span><br><span class="line">| NULL IS NULL | ISNULL(NULL) | 10 IS NOT NULL |</span><br><span class="line">+--------------+--------------+----------------+</span><br><span class="line">|            1 |            1 |              1 |</span><br><span class="line">+--------------+--------------+----------------+</span><br></pre></td></tr></table></figure><h3 id="BETWEEN-AND"><a href="#BETWEEN-AND" class="headerlink" title="BETWEEN AND"></a>BETWEEN AND</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 4 BETWEEN 4 AND 6, 6 BETWEEN 6 AND 9;</span><br><span class="line">+-------------------+-------------------+</span><br><span class="line">| 4 BETWEEN 4 AND 6 | 6 BETWEEN 6 AND 9 |</span><br><span class="line">+-------------------+-------------------+</span><br><span class="line">|                 1 |                 1 |</span><br><span class="line">+-------------------+-------------------+</span><br></pre></td></tr></table></figure><h3 id="LEAST"><a href="#LEAST" class="headerlink" title="LEAST"></a>LEAST</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT LEAST(2, 0), LEAST(1, 1.1, 101), LEAST(10, NULL);</span><br><span class="line">+-------------+--------------------+-----------------+</span><br><span class="line">| LEAST(2, 0) | LEAST(1, 1.1, 101) | LEAST(10, NULL) |</span><br><span class="line">+-------------+--------------------+-----------------+</span><br><span class="line">|           0 |                1.0 |            NULL |</span><br><span class="line">+-------------+--------------------+-----------------+</span><br></pre></td></tr></table></figure><h3 id="GREATEST"><a href="#GREATEST" class="headerlink" title="GREATEST"></a>GREATEST</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT GREATEST(2, 0), GREATEST(1, 1.1, 101), GREATEST(10, NULL);</span><br><span class="line">+----------------+-----------------------+--------------------+</span><br><span class="line">| GREATEST(2, 0) | GREATEST(1, 1.1, 101) | GREATEST(10, NULL) |</span><br><span class="line">+----------------+-----------------------+--------------------+</span><br><span class="line">|              2 |                 101.0 |               NULL |</span><br><span class="line">+----------------+-----------------------+--------------------+</span><br></pre></td></tr></table></figure><h3 id="IN-NOT-IN"><a href="#IN-NOT-IN" class="headerlink" title="IN , NOT IN"></a>IN , NOT IN</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT 2 IN(1,2,3,&apos;A&apos;,&apos;B&apos;), &apos;A&apos; IN(&apos;A&apos;,1), NULL IN(NULL,1);</span><br><span class="line">+---------------------+---------------+-----------------+</span><br><span class="line">| 2 IN(1,2,3,&apos;A&apos;,&apos;B&apos;) | &apos;A&apos; IN(&apos;A&apos;,1) | NULL IN(NULL,1) |</span><br><span class="line">+---------------------+---------------+-----------------+</span><br><span class="line">|                   1 |             1 |            NULL |</span><br><span class="line">+---------------------+---------------+-----------------+</span><br></pre></td></tr></table></figure><h3 id="LIKE"><a href="#LIKE" class="headerlink" title="LIKE"></a>LIKE</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT &apos;ABC&apos; LIKE &apos;ABC&apos;, &apos;ABC&apos; LIKE &apos;AB_&apos;, &apos;ABC&apos; LIKE &apos;A__&apos;, &apos;A%&apos; LIKE &apos;ABC&apos;;</span><br><span class="line">+------------------+------------------+------------------+-----------------+</span><br><span class="line">| &apos;ABC&apos; LIKE &apos;ABC&apos; | &apos;ABC&apos; LIKE &apos;AB_&apos; | &apos;ABC&apos; LIKE &apos;A__&apos; | &apos;A%&apos; LIKE &apos;ABC&apos; |</span><br><span class="line">+------------------+------------------+------------------+-----------------+</span><br><span class="line">|                1 |                1 |                1 |               0 |</span><br><span class="line">+------------------+------------------+------------------+-----------------+</span><br></pre></td></tr></table></figure><h3 id="REGEXP"><a href="#REGEXP" class="headerlink" title="REGEXP"></a>REGEXP</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT &apos;ABC&apos; REGEXP &apos;^A&apos;, &apos;ABC&apos; REGEXP &apos;C$&apos;, &apos;ABC&apos; REGEXP &apos;.BC&apos;, &apos;AC&apos; REGEXP &apos;A-Z&apos;;</span><br><span class="line">+-------------------+-------------------+--------------------+-------------------+</span><br><span class="line">| &apos;ABC&apos; REGEXP &apos;^A&apos; | &apos;ABC&apos; REGEXP &apos;C$&apos; | &apos;ABC&apos; REGEXP &apos;.BC&apos; | &apos;AC&apos; REGEXP &apos;A-Z&apos; |</span><br><span class="line">+-------------------+-------------------+--------------------+-------------------+</span><br><span class="line">|                 1 |                 1 |                  1 |                 0 |</span><br><span class="line">+-------------------+-------------------+--------------------+-------------------+</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;分类&quot;&gt;&lt;a href=&quot;#分类&quot; class=&quot;headerlink&quot; title=&quot;分类&quot;&gt;&lt;/a&gt;分类&lt;/h1&gt;&lt;p&gt;&lt;code&gt;算数运算符， 比较运算符， 逻辑运算符， 位操作运算符&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;算数运算符&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="https://yuluhuang.com" scheme="http://yuluhuang.github.io/categories/https-yuluhuang-com/"/>
    
    
      <category term="mysql" scheme="http://yuluhuang.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>echarts-map</title>
    <link href="http://yuluhuang.github.io/2018/03/23/echarts-map/"/>
    <id>http://yuluhuang.github.io/2018/03/23/echarts-map/</id>
    <published>2018-03-23T03:28:34.000Z</published>
    <updated>2019-02-28T03:19:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><h3 id="西秀地图"><a href="#西秀地图" class="headerlink" title="西秀地图"></a>西秀地图</h3><blockquote><p>行政区域：乡镇（16）<br>区域颜色：蓝色（深浅代表产量）<br>合作社标识：黄色气泡 鼠标停留在合作社气泡，可以显示信息列表</p></blockquote><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><ol><li>echarts 支持省市区规划, 乡镇及以下不支持</li><li>ECharts 地图数据在线生成工具 <a href="http://ecomfe.github.io/echarts-map-tool/" target="_blank" rel="noopener">http://ecomfe.github.io/echarts-map-tool/</a><br>已不支持矢量地图数据下载, 需自己采点绘图</li></ol><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><ol><li>通过百度地图采点</li><li>通过 echarts 绘图</li></ol><h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>采点工具<br><img src="/img/echarts-map.png" alt="图例"></p><p>最终效果<br><img src="http://7ls06l.com1.z0.glb.clouddn.com/B60B1F6F-299C-4AB3-AB46-E5549A1B8C7E.png" alt="图例"></p><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p><a href="https://github.com/yuluhuang/echarts-map" target="_blank" rel="noopener">github</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>内部公共点只使用同一份, 切勿重复取点</li><li>耐心, 取点疏密决定分区线细腻度, 本例比较粗糙</li><li>取完点绘图时可能有瑕疵, 对于有瑕疵区域最好重新采点</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h2&gt;&lt;h3 id=&quot;西秀地图&quot;&gt;&lt;a href=&quot;#西秀地图&quot; class=&quot;headerlink&quot; title=&quot;西秀地图&quot;&gt;&lt;/a&gt;西秀地图&lt;/h
      
    
    </summary>
    
      <category term="https://yuluhuang.com" scheme="http://yuluhuang.github.io/categories/https-yuluhuang-com/"/>
    
    
      <category term="echarts" scheme="http://yuluhuang.github.io/tags/echarts/"/>
    
      <category term="map" scheme="http://yuluhuang.github.io/tags/map/"/>
    
  </entry>
  
  <entry>
    <title>deep_and_shallow_copy_js</title>
    <link href="http://yuluhuang.github.io/2018/03/06/deep-and-shallow-copy-js/"/>
    <id>http://yuluhuang.github.io/2018/03/06/deep-and-shallow-copy-js/</id>
    <published>2018-03-06T07:31:42.000Z</published>
    <updated>2019-03-09T12:17:41.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li>深拷贝可以理解为递归进行浅拷贝。</li><li>简单来说，浅复制只复制一层对象的属性，而深复制则递归复制了所有层级</li></ol><h2 id="浅拷贝实现"><a href="#浅拷贝实现" class="headerlink" title="浅拷贝实现"></a>浅拷贝实现</h2><p>1.<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">shallowClone</span> (<span class="params">copyObj</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> obj = &#123;&#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> prop <span class="keyword">in</span> copyObj) &#123;</span><br><span class="line">    <span class="keyword">if</span> (copyObj.hasOwnProperty(prop)) &#123;</span><br><span class="line">        obj[prop] = copyObj[prop]</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> obj;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol start="2"><li><p>Object.assign()</p></li><li><p>Array的slice和concat方法</p><ul><li>它看起来像是深拷贝。而实际上它是浅拷贝: 如果该元素是个对象引用, 两个对象引用都引用了同一个对象, 所以会同变</li><li>如果向两个数组任一中添加了新元素，则另一个不会受到影响</li></ul></li></ol><h2 id="深拷贝的实现"><a href="#深拷贝的实现" class="headerlink" title="深拷贝的实现"></a>深拷贝的实现</h2><ol><li>对于字符串、数字及布尔值来说 没有深浅之分</li><li><p>JSON对象的parse和stringify<br> <code>JSON.parse(JSON.stringify(source))</code><br> 这种方法使用较为简单，可以满足基本的深拷贝需求，而且能够处理JSON格式能表示的所有数据类型，<br> 但是对于正则表达式类型、函数类型等无法进行深拷贝(而且会直接丢失)。还有一点不好的地方是它会抛弃对象的constructor。也就是深拷贝之后，不管这个对象原来的构造函数是什么，在深拷贝之后都会变成Object。同时如果对象中存在循环引用的情况也无法正确处理。</p></li><li><p>Object.create(source)</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">copy</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> F = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    &#125;;</span><br><span class="line">    F.prototype = obj;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> F();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 是在方法内部创建了一个 function 原型指向传入的 old对象，再返回一个 function 实例，也就是拷贝出来的值，所以添加改变实例属性不会影响原型，但是修改 old 对象的属性值，也就是改变了实例的原型属性，新的对象的所有属性都是继承自 old 对象，自然会跟着变</p></li></ol><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://github.com/wengjq/Blog/issues/3" target="_blank" rel="noopener">https://github.com/wengjq/Blog/issues/3</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;深拷贝可以理解为递归进行浅拷贝。&lt;/li&gt;
&lt;li&gt;简单来说，浅复制只复制一层对象的属性，而深复制则递归复制了所有层级&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;浅拷贝实现&quot;&gt;&lt;a href=&quot;#浅拷贝实现&quot; class=&quot;headerlink&quot; title=&quot;浅拷
      
    
    </summary>
    
      <category term="技术" scheme="http://yuluhuang.github.io/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="js" scheme="http://yuluhuang.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>内网穿透实践</title>
    <link href="http://yuluhuang.github.io/2018/01/28/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F%E5%AE%9E%E8%B7%B5/"/>
    <id>http://yuluhuang.github.io/2018/01/28/内网穿透实践/</id>
    <published>2018-01-28T13:20:45.000Z</published>
    <updated>2019-02-28T03:19:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>#需求<br>大多数情况下我们使用的ip都属于动态分配ip,<br>如果有一个静态ip, 就可以做很多事</p><ol><li>场景一<br>将自己的电脑变成服务器, 可以有无限大的资源</li><li>场景二<br>通过ssh远程控制自己的电脑, 将自己本机作为跳板, 非常方便</li><li>场景三<br>给客户直接做展示, 打开连接直接连到本机, 安全方便快捷</li><li>自己脑补</li></ol><ol><li>我找到了ngrok</li><li>localtunnel 可行</li><li>pagekite</li></ol><h2 id="ngrok-已闭源-收费"><a href="#ngrok-已闭源-收费" class="headerlink" title="ngrok (已闭源, 收费)"></a>ngrok (已闭源, 收费)</h2><p>npm install ngrok -g<br>ngrok http 8080<br>ngrok http -subdomain=yuluhuang 9999</p><h2 id="localtunnel-第三方都不太稳定"><a href="#localtunnel-第三方都不太稳定" class="headerlink" title="localtunnel (第三方都不太稳定)"></a>localtunnel (第三方都不太稳定)</h2><p>###官网 <a href="http://localtunnel.me/" target="_blank" rel="noopener">http://localtunnel.me/</a></p><p>###使用</p><ol><li>npm install -g localtunnel</li><li>lt –port 8000 //lt –help<br>or lt –subdomain yuluhuang –port 8888</li></ol><h2 id="pagekite（有限制）"><a href="#pagekite（有限制）" class="headerlink" title="pagekite（有限制）"></a>pagekite（有限制）</h2><p>###官网 <a href="https://pagekite.net/" target="_blank" rel="noopener">https://pagekite.net/</a></p><ol><li>下载py文件</li><li>双击运行</li></ol><h2 id="frp-以上都不具实用性"><a href="#frp-以上都不具实用性" class="headerlink" title="frp (以上都不具实用性)"></a>frp (以上都不具实用性)</h2><p>因为工作需要使用到内网穿透，让远程用户直接访问本地，查看最终效果<br>之前使用过ngrok, localtunnel, pagekite, 要么不能用，要么不好用，自己部署也很复杂<br>看到又一款穿透工具 介绍 <a href="http://www.sunnyrx.com/2016/10/21/simple-to-use-frp/" target="_blank" rel="noopener">http://www.sunnyrx.com/2016/10/21/simple-to-use-frp/</a> ,<br>官方文档： <a href="https://github.com/fatedier/frp/blob/master/README_zh.md" target="_blank" rel="noopener">https://github.com/fatedier/frp/blob/master/README_zh.md</a><br>就自己部署了一遍， 发现还是可行的 中文文档也比较详细，我在记录一遍</p><p>前提: 你需要一台自己的服务器</p><ol><li>在客户端和服务器端下载安装包<br>|-frpc // 客户端<br>|-frpc.ini // 客户端配置文件<br>|-frps // 服务端<br>|-frps.ini // 服务端配置文件</li></ol><ol start="2"><li>配置</li></ol><p>frpc.ini<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = x.x.x.x # 服务端ip</span><br><span class="line">server_port = 7000 # 端口, 记得打开</span><br><span class="line"></span><br><span class="line">[ssh]</span><br><span class="line">type = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br><span class="line">remote_port = 6000</span><br><span class="line"></span><br><span class="line">[http_proxy]</span><br><span class="line">type = tcp</span><br><span class="line">remote_port = 5000</span><br><span class="line">plugin = http_proxy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[web]</span><br><span class="line">type = http</span><br><span class="line">local_port = 8109 # 本地应用使用端口</span><br><span class="line">custom_domains = www.blibao.shop # 解析到服务端的域名， 客户端访问 www.blibao.shop:8080即可访问到本地应用，8080需在服务端配置文件中配置</span><br></pre></td></tr></table></figure></p><p>frps.ini<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span></span><br><span class="line"><span class="attr">vhost_http_port</span> = <span class="number">8080</span></span><br></pre></td></tr></table></figure></p><ol start="3"><li>启动<br>使用screen让frp在后台运行<br>下面的示范是运行服务端的frp，客户端就不示范了，前面提过群晖的系统没有screen指令。</li></ol><p>首先使用screen指令创建一个会话。</p><p>screen -dmS frp<br>然后进入这个会话。</p><p>screen -r frp<br>最后使用运行frp的指令，在后面加上” &amp;”。（如果之前断开了SSH连接，记得用cd指令进入frp的目录先。）</p><p>./frps -c ./frps.ini &amp;<br>这样就让frp在后台运行了。</p><ol start="4"><li>配置ssh连接本机<br>frpc.ini<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[ssh]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">auth_token</span> = <span class="number">123</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6000</span></span><br></pre></td></tr></table></figure></li></ol><p>frps.ini<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[ssh]</span><br><span class="line">type = tcp</span><br><span class="line">auth_token = 123</span><br><span class="line">bind_addr = 0.0.0.0</span><br><span class="line">listen_port = 6000</span><br></pre></td></tr></table></figure></p><p>mac 在共享中打开允许远程连接，设置用户<br>ssh <a href="mailto:root@x.x.x.x" target="_blank" rel="noopener">root@x.x.x.x</a> -p 6000</p><h1 id="场景1"><a href="#场景1" class="headerlink" title="场景1"></a>场景1</h1><p>利用frp主从备份mongo数据库</p><h1 id="场景2"><a href="#场景2" class="headerlink" title="场景2"></a>场景2</h1><p>利用frp 副本集 mongo数据库(同理)</p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><ol><li>对架设frps的服务器要求高，不适合同时架设过多连接，大流量容易堵塞，可用于小网站或搭建远程测试环境</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#需求&lt;br&gt;大多数情况下我们使用的ip都属于动态分配ip,&lt;br&gt;如果有一个静态ip, 就可以做很多事&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;场景一&lt;br&gt;将自己的电脑变成服务器, 可以有无限大的资源&lt;/li&gt;
&lt;li&gt;场景二&lt;br&gt;通过ssh远程控制自己的电脑, 将自己本机作为跳板
      
    
    </summary>
    
      <category term="https://yuluhuang.com" scheme="http://yuluhuang.github.io/categories/https-yuluhuang-com/"/>
    
    
      <category term="frp" scheme="http://yuluhuang.github.io/tags/frp/"/>
    
      <category term="ssh" scheme="http://yuluhuang.github.io/tags/ssh/"/>
    
      <category term="vpn" scheme="http://yuluhuang.github.io/tags/vpn/"/>
    
  </entry>
  
  <entry>
    <title>ng2</title>
    <link href="http://yuluhuang.github.io/2016/10/27/ng2/"/>
    <id>http://yuluhuang.github.io/2016/10/27/ng2/</id>
    <published>2016-10-27T13:28:10.000Z</published>
    <updated>2019-02-28T03:19:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Question"><a href="#Question" class="headerlink" title="Question"></a>Question</h2><ol><li><p>Unhandled Promise rejection: No base href set. Please provide a value for the APP_BASE_HREF</p><p>页面添加 <base href="/"></p><ol start="2"><li>httpService 自定义 需要在 app.component.ts 声明<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Component &#125; <span class="keyword">from</span> <span class="string">'@angular/core'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; HttpService &#125; <span class="keyword">from</span> <span class="string">'./httpService'</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span>(&#123;</span><br><span class="line">  moduleId: <span class="built_in">module</span>.id,</span><br><span class="line">  selector: <span class="string">'app-root'</span>,</span><br><span class="line">  providers: [HttpService]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">class</span> AppComponent &#123;</span><br><span class="line">  <span class="keyword">constructor</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Question&quot;&gt;&lt;a href=&quot;#Question&quot; class=&quot;headerlink&quot; title=&quot;Question&quot;&gt;&lt;/a&gt;Question&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Unhandled Promise rejection: No base 
      
    
    </summary>
    
      <category term="https://yuluhuang.com" scheme="http://yuluhuang.github.io/categories/https-yuluhuang-com/"/>
    
    
      <category term="angular2" scheme="http://yuluhuang.github.io/tags/angular2/"/>
    
  </entry>
  
  <entry>
    <title>weixin</title>
    <link href="http://yuluhuang.github.io/2016/10/27/weixin/"/>
    <id>http://yuluhuang.github.io/2016/10/27/weixin/</id>
    <published>2016-10-27T04:01:29.000Z</published>
    <updated>2019-02-28T03:19:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>微信营销<br>以用户为中心，处处为用户着想<br>避免资源浪费/资源合理运用/任何xx都是资源，任何资源都是有价值的</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;微信营销&lt;br&gt;以用户为中心，处处为用户着想&lt;br&gt;避免资源浪费/资源合理运用/任何xx都是资源，任何资源都是有价值的&lt;/p&gt;

      
    
    </summary>
    
      <category term="https://yuluhuang.com" scheme="http://yuluhuang.github.io/categories/https-yuluhuang-com/"/>
    
    
      <category term="weixin" scheme="http://yuluhuang.github.io/tags/weixin/"/>
    
  </entry>
  
  <entry>
    <title>mean-tasklist</title>
    <link href="http://yuluhuang.github.io/2016/10/23/mean-tasklist/"/>
    <id>http://yuluhuang.github.io/2016/10/23/mean-tasklist/</id>
    <published>2016-10-23T12:58:22.000Z</published>
    <updated>2019-02-28T03:19:20.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><ol><li>nodejs</li><li><a href="http://yuluhuang.github.io/2016/03/18/Running-MongoDB-on-Windows/">mongo</a></li></ol><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">|-client</span></span><br><span class="line">    <span class="string">|-app</span></span><br><span class="line">        <span class="string">|-components</span></span><br><span class="line">            <span class="string">|-task</span></span><br><span class="line">                <span class="string">|-tasks.component.html</span></span><br><span class="line">                <span class="string">|-tasks.components.ts</span></span><br><span class="line">            <span class="string">|-services</span></span><br><span class="line">                <span class="string">|-task.services.ts</span></span><br><span class="line">            <span class="string">|-app.component.html</span></span><br><span class="line">            <span class="string">|-app.component.ts</span></span><br><span class="line">            <span class="string">|-app.module.ts</span></span><br><span class="line">            <span class="string">|-main.ts</span></span><br><span class="line">        <span class="string">|-bower_components</span></span><br><span class="line">        <span class="string">|-node_modules</span></span><br><span class="line">        <span class="string">|-typings</span></span><br><span class="line">        <span class="string">|-package.json</span></span><br><span class="line">        <span class="string">|-systemjs.config.js</span></span><br><span class="line">        <span class="string">|-Task.ts</span></span><br><span class="line">        <span class="string">|-tsconfig.json</span></span><br><span class="line">        <span class="string">|-typings.json</span></span><br><span class="line">    <span class="string">|-node_modules</span></span><br><span class="line">    <span class="string">|-routes</span></span><br><span class="line">        <span class="string">|-index.js</span></span><br><span class="line">        <span class="string">|-tasks.js</span></span><br><span class="line">    <span class="string">|-views</span></span><br><span class="line">        <span class="string">|-index.html</span></span><br><span class="line">    <span class="string">|-.bowerrc</span></span><br><span class="line">    <span class="string">|-package.json</span></span><br><span class="line">    <span class="string">|-server.js</span></span><br></pre></td></tr></table></figure><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h2 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h2><ol><li>cd tasklist &amp;&amp; npm init #创建项目</li><li>npm install mongojs express ejs body-parser –save</li><li>touch server.js</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">var</span> bodyParser = <span class="built_in">require</span>(<span class="string">'body-parser'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> index = <span class="built_in">require</span>(<span class="string">'./routes/index'</span>);</span><br><span class="line"><span class="keyword">var</span> tasks = <span class="built_in">require</span>(<span class="string">'./routes/tasks'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> port = <span class="number">3000</span>;</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"></span><br><span class="line">app.set(<span class="string">'views'</span>, path.join(__dirname, <span class="string">'views'</span>));</span><br><span class="line">app.set(<span class="string">'view engine'</span>, <span class="string">'ejs'</span>);</span><br><span class="line">app.engine(<span class="string">'html'</span>, <span class="built_in">require</span>(<span class="string">'ejs'</span>).renderFile);</span><br><span class="line"></span><br><span class="line">app.use(express.static(path.join(__dirname, <span class="string">'client'</span>)));</span><br><span class="line">app.use(bodyParser.json());</span><br><span class="line">app.use(bodyParser.urlencoded(&#123;<span class="attr">extended</span>: <span class="literal">false</span>&#125;));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.use(<span class="string">'/'</span>, index);</span><br><span class="line">app.use(<span class="string">'/api'</span>, tasks);</span><br><span class="line"></span><br><span class="line">app.listen(port, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'Server started on port'</span> + port)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol start="4"><li>mkdir routes &amp;&amp; cd routes</li><li>touch index.js</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">var</span> router = express.Router();</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    res.render(<span class="string">'index.html'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">module</span>.exports = router;</span><br></pre></td></tr></table></figure><ol start="6"><li>mkdir views &amp;&amp; cd views &amp;&amp; touch index.html</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">    &lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">        &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        HELLO WORLD</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ol start="7"><li>touch tasks.js</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>)</span><br><span class="line"><span class="keyword">var</span> router = express.Router();</span><br><span class="line"><span class="keyword">var</span> mongojs = <span class="built_in">require</span>(<span class="string">'mongojs'</span>)</span><br><span class="line"><span class="keyword">var</span> db = mongojs(<span class="string">'mongodb://localhost:27017/nodeapp'</span>, [<span class="string">'tasks'</span>])</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">'/tasks'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    db.tasks.find(<span class="function"><span class="keyword">function</span> (<span class="params">err, tasks</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            res.send(err);</span><br><span class="line">        &#125;</span><br><span class="line">        res.json(tasks);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">'/task/:id'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    db.tasks.findOne(&#123;<span class="attr">_id</span>: mongojs.ObjectId(req.params.id)&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, task</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            res.send(err);</span><br><span class="line">        &#125;</span><br><span class="line">        res.json(task);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.post(<span class="string">'/task'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> task = req.body;</span><br><span class="line">    <span class="keyword">if</span> (!task.title || !(task.isDone + <span class="string">''</span>)) &#123;</span><br><span class="line">        req.status(<span class="number">400</span>);</span><br><span class="line">        res.json(&#123;</span><br><span class="line">            <span class="string">"error"</span>: <span class="string">'Bad Date'</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        db.tasks.save(task, <span class="function"><span class="keyword">function</span> (<span class="params">err, task</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                res.send(err);</span><br><span class="line">            &#125;</span><br><span class="line">            res.json(task);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.delete(<span class="string">'/task/:id'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    db.tasks.remove(&#123;<span class="attr">_id</span>: mongojs.ObjectId(req.params.id)&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">err, task</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (err) &#123;</span><br><span class="line">            res.send(err);</span><br><span class="line">        &#125;</span><br><span class="line">        res.json(task);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">router.put(<span class="string">'/task/:id'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> task = req.body;</span><br><span class="line">    <span class="keyword">var</span> updTask = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (task.isDone) &#123;</span><br><span class="line">        updTask.isDone = task.isDone;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (task.title) &#123;</span><br><span class="line">        updTask.title = task.title;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!updTask) &#123;</span><br><span class="line">        res.status(<span class="number">400</span>);</span><br><span class="line">        res.json(&#123;</span><br><span class="line">            <span class="string">"error"</span>: <span class="string">'Bad Data'</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        db.tasks.update(&#123;<span class="attr">_id</span>: mongojs.ObjectId(req.params.id)&#125;, updTask, <span class="function"><span class="keyword">function</span> (<span class="params">err, task</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (err) &#123;</span><br><span class="line">                res.send(err);</span><br><span class="line">            &#125;</span><br><span class="line">            res.json(task);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = router;</span><br></pre></td></tr></table></figure><h2 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h2><ol><li>mkdir client &amp;&amp; mkdir app</li><li>touch package.json</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"angular-quickstart"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"start"</span>: <span class="string">"tsc &amp;&amp; concurrently \"tsc -w\" \"lite-server\" "</span>,</span><br><span class="line">    <span class="attr">"lite"</span>: <span class="string">"lite-server"</span>,</span><br><span class="line">    <span class="attr">"postinstall"</span>: <span class="string">"typings install"</span>,</span><br><span class="line">    <span class="attr">"tsc"</span>: <span class="string">"tsc"</span>,</span><br><span class="line">    <span class="attr">"tsc:w"</span>: <span class="string">"tsc -w"</span>,</span><br><span class="line">    <span class="attr">"typings"</span>: <span class="string">"typings"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"licenses"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"MIT"</span>,</span><br><span class="line">      <span class="attr">"url"</span>: <span class="string">"https://github.com/angular/angular.io/blob/master/LICENSE"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"@angular/common"</span>: <span class="string">"~2.1.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/compiler"</span>: <span class="string">"~2.1.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/core"</span>: <span class="string">"~2.1.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/forms"</span>: <span class="string">"~2.1.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/http"</span>: <span class="string">"~2.1.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/platform-browser"</span>: <span class="string">"~2.1.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/platform-browser-dynamic"</span>: <span class="string">"~2.1.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/router"</span>: <span class="string">"~3.1.0"</span>,</span><br><span class="line">    <span class="attr">"@angular/upgrade"</span>: <span class="string">"~2.1.0"</span>,</span><br><span class="line">    <span class="attr">"angular-in-memory-web-api"</span>: <span class="string">"~0.1.5"</span>,</span><br><span class="line">    <span class="attr">"bootstrap"</span>: <span class="string">"^3.3.7"</span>,</span><br><span class="line">    <span class="attr">"core-js"</span>: <span class="string">"^2.4.1"</span>,</span><br><span class="line">    <span class="attr">"reflect-metadata"</span>: <span class="string">"^0.1.8"</span>,</span><br><span class="line">    <span class="attr">"rxjs"</span>: <span class="string">"5.0.0-beta.12"</span>,</span><br><span class="line">    <span class="attr">"systemjs"</span>: <span class="string">"0.19.39"</span>,</span><br><span class="line">    <span class="attr">"zone.js"</span>: <span class="string">"^0.6.25"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"devDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"concurrently"</span>: <span class="string">"^3.0.0"</span>,</span><br><span class="line">    <span class="attr">"lite-server"</span>: <span class="string">"^2.2.2"</span>,</span><br><span class="line">    <span class="attr">"typescript"</span>: <span class="string">"^2.0.3"</span>,</span><br><span class="line">    <span class="attr">"typings"</span>:<span class="string">"^1.4.0"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>touch typings.json</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"globalDependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"core-js"</span>: <span class="string">"registry:dt/core-js#0.0.0+20160725163759"</span>,</span><br><span class="line">    <span class="attr">"jasmine"</span>: <span class="string">"registry:dt/jasmine#2.2.0+20160621224255"</span>,</span><br><span class="line">    <span class="attr">"node"</span>: <span class="string">"registry:dt/node#6.0.0+20160909174046"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>touch tsconfig.json</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"compilerOptions"</span>: &#123;</span><br><span class="line">        <span class="attr">"target"</span>: <span class="string">"es5"</span>,</span><br><span class="line">        <span class="attr">"module"</span>: <span class="string">"commonjs"</span>,</span><br><span class="line">        <span class="attr">"moduleResolution"</span>: <span class="string">"node"</span>,</span><br><span class="line">        <span class="attr">"sourceMap"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"emitDecoratorMetadata"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"experimentalDecorators"</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">"removeComments"</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">"noImplicitAny"</span>: <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>systemjs.config.js</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * System configuration for Angular samples</span></span><br><span class="line"><span class="comment"> * Adjust as necessary for your application needs.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">global</span>) </span>&#123;</span><br><span class="line">  System.config(&#123;</span><br><span class="line">    paths: &#123;</span><br><span class="line">      <span class="comment">// paths serve as alias</span></span><br><span class="line">      <span class="string">'npm:'</span>: <span class="string">'node_modules/'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// map tells the System loader where to look for things</span></span><br><span class="line">    map: &#123;</span><br><span class="line">      <span class="comment">// our app is within the app folder</span></span><br><span class="line">      app: <span class="string">'app'</span>,</span><br><span class="line">      <span class="comment">// angular bundles</span></span><br><span class="line">      <span class="string">'@angular/core'</span>: <span class="string">'npm:@angular/core/bundles/core.umd.js'</span>,</span><br><span class="line">      <span class="string">'@angular/common'</span>: <span class="string">'npm:@angular/common/bundles/common.umd.js'</span>,</span><br><span class="line">      <span class="string">'@angular/compiler'</span>: <span class="string">'npm:@angular/compiler/bundles/compiler.umd.js'</span>,</span><br><span class="line">      <span class="string">'@angular/platform-browser'</span>: <span class="string">'npm:@angular/platform-browser/bundles/platform-browser.umd.js'</span>,</span><br><span class="line">      <span class="string">'@angular/platform-browser-dynamic'</span>: <span class="string">'npm:@angular/platform-browser-dynamic/bundles/platform-browser-dynamic.umd.js'</span>,</span><br><span class="line">      <span class="string">'@angular/http'</span>: <span class="string">'npm:@angular/http/bundles/http.umd.js'</span>,</span><br><span class="line">      <span class="string">'@angular/router'</span>: <span class="string">'npm:@angular/router/bundles/router.umd.js'</span>,</span><br><span class="line">      <span class="string">'@angular/forms'</span>: <span class="string">'npm:@angular/forms/bundles/forms.umd.js'</span>,</span><br><span class="line">      <span class="comment">// other libraries</span></span><br><span class="line">      <span class="string">'rxjs'</span>:                      <span class="string">'npm:rxjs'</span>,</span><br><span class="line">      <span class="string">'angular-in-memory-web-api'</span>: <span class="string">'npm:angular-in-memory-web-api'</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">// packages tells the System loader how to load when no filename and/or no extension</span></span><br><span class="line">    packages: &#123;</span><br><span class="line">      app: &#123;</span><br><span class="line">        main: <span class="string">'./main.js'</span>,</span><br><span class="line">        defaultExtension: <span class="string">'js'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      rxjs: &#123;</span><br><span class="line">        defaultExtension: <span class="string">'js'</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">'angular-in-memory-web-api'</span>: &#123;</span><br><span class="line">        main: <span class="string">'./index.js'</span>,</span><br><span class="line">        defaultExtension: <span class="string">'js'</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)(<span class="keyword">this</span>);</span><br></pre></td></tr></table></figure><ol start="6"><li>npm install</li><li>touch .bowerrc</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"directory"</span>: <span class="string">"./client/bower_components"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="8"><li>bower install bootstrap –save</li></ol><h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a><a href="https://github.com/yuluhuang/mea2n-tasklist" target="_blank" rel="noopener">Demo</a></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;nodejs&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://yuluhuang.github.io/2016/03/18/R
      
    
    </summary>
    
      <category term="https://yuluhuang.com" scheme="http://yuluhuang.github.io/categories/https-yuluhuang-com/"/>
    
    
      <category term="mongo" scheme="http://yuluhuang.github.io/tags/mongo/"/>
    
      <category term="mean" scheme="http://yuluhuang.github.io/tags/mean/"/>
    
      <category term="express" scheme="http://yuluhuang.github.io/tags/express/"/>
    
      <category term="ng2" scheme="http://yuluhuang.github.io/tags/ng2/"/>
    
      <category term="node" scheme="http://yuluhuang.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>一位合格工程师应该具备的要素</title>
    <link href="http://yuluhuang.github.io/2016/10/08/%E4%B8%80%E4%BD%8D%E5%90%88%E6%A0%BC%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%BA%94%E8%AF%A5%E5%85%B7%E5%A4%87%E7%9A%84%E8%A6%81%E7%B4%A0/"/>
    <id>http://yuluhuang.github.io/2016/10/08/一位合格工程师应该具备的要素/</id>
    <published>2016-10-08T12:31:06.000Z</published>
    <updated>2019-02-28T03:19:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>引：大多数人在进入软件开发这一行业迷漫无措的，当然也有人是充满激情和理想， 但是并不是每个人都能成为黑客<br>帝国中的主人公，就算配角也是寥寥无几。平凡是基调但是我们拒绝平凡，曾经的我们都曾梦想改变世界，现在依旧<br>这么认为</p><h1 id="知学善用"><a href="#知学善用" class="headerlink" title="知学善用"></a>知学善用</h1><p>简而言之就是善于学习，并且学以致用</p><h2 id="注重自身成长"><a href="#注重自身成长" class="headerlink" title="注重自身成长"></a>注重自身成长</h2><ol><li><a href="http://yuluhuang.github.io/2016/10/07/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/">学会正确提问</a></li><li>正确使用搜索引擎，养成良好的搜索习惯让搜索引擎成为你的专属工具</li><li>勤做笔记， 勤写博客，知识只有传播才有价值</li><li>维护好你的代码</li></ol><h2 id="耐得住寂寞"><a href="#耐得住寂寞" class="headerlink" title="耐得住寂寞"></a>耐得住寂寞</h2><p>程序员的日常生活就是：找到问题-评估选择最优解决方案-完成-测试-发现问题<br>大多数程序员在996的工作环境下变得沉默寡言，拿起你的手机看看微信朋友圈或者qq空间几乎没有自己的说说<br>炫富的程序员不是好的程序员也是一样道理，这已经成为这个行业的标志：人傻钱多不会花</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;引：大多数人在进入软件开发这一行业迷漫无措的，当然也有人是充满激情和理想， 但是并不是每个人都能成为黑客&lt;br&gt;帝国中的主人公，就算配角也是寥寥无几。平凡是基调但是我们拒绝平凡，曾经的我们都曾梦想改变世界，现在依旧&lt;br&gt;这么认为&lt;/p&gt;
&lt;h1 id=&quot;知学善用&quot;&gt;&lt;a 
      
    
    </summary>
    
      <category term="https://yuluhuang.com" scheme="http://yuluhuang.github.io/categories/https-yuluhuang-com/"/>
    
    
  </entry>
  
</feed>
